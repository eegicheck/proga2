Двоичное дерево поиска.

Двоичный, или бинарный, поиск значения в списке или массиве используется только для упорядоченных последовательностей, 
то есть отсортированных по возрастанию или убыванию. 
Каждое значение в левом ребёнке меньше значения в вершине, каждое значение в правом ребёнке больше значения в вершине.
Каждое поддерево является двоичным деревом поиска.
Количество вершин примерно N = 2^H, где Н - высота дерева. Тогда скорость выполнения = высота дерева = O(logN)
В такое дерево очень легко добавлять элементы. Проходим до конца при поиске и туда, где элемент должен был найтись, добавляем.
Скорость добавления элемена = скорость выполнения = высота дерева = O(logN)
За время порядка NlogN можно дерево поиска создать (для каждого элемента пройтись по полученному дереву, первое число - вершина)
