Списки: односвязный, двусвязный, кольцо. 
Время работы основных операций (добавление в начало/конец, удаление с начала/конца, обращение к произвольному элементу).

Списки в Python - упорядоченные изменяемые коллекции объектов произвольных типов. 
Динамическая структура данных, представляющая собой конечное множество упорядоченных элементов (узлов), 
связанных друг с другом посредством указателей, называется связным списком.
Каждый элемент связного списка содержит поле с данными, а также указатель (ссылку) на следующий и/или предыдущий элемент. 
Эта структура позволяет эффективно выполнять операции добавления и удаления элементов для любой позиции в последовательности.

Односвязный список - список, почти каждый элемент которого содержит данные и ссылку на следующий элемент. 
Последний элемент односвязного списка указывает на null.

Двусвязный список - список, почти каждый элемент которого содержит данные, ссылку на следующий элемент и ссылку на предыдущий.
В этом списке проще производить удаление и перестановку элементов, так как легко доступны адреса тех элементов списка, 
указатели которых направлены на изменяемый элемент.

Еще один вид связного списка – кольцевой список. В кольцевом односвязном списке последний элемент ссылается на первый. 
В случае двусвязного кольцевого списка – плюс к этому первый ссылается на последний, получается зацикленная структура.

Недостатки связных списков вытекают из их главного свойства — последовательного доступа к данным: 
сложность прямого доступа к элементу.

Метод Add Поведение: Добавляет элемент в конец списка. Сложность: O(1)
Метод AddFirst В то время, как односвязный список позволяет добавлять элементы только в конец, 
используя двусвязный список мы можем добавлять элементы как в начало, так и в конец, 
с помощью методов AddFirst и AddLast соответственно. Сложность: O(1)
Метод Remove: Удаляет первый элемент списка со значением, равным переданному. 
Возвращает true, если элемент был удален и false в противном случае. Сложность: O(n)
