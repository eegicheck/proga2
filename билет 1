Хеширование. Алгоритм Рабина-Карпа  


Хеширование - функция, получающая на вход массив данных произвольной длины и выдающая на выходе битовую 
строку установленной длины. 
Исходные данные - входной массив или ключ.
Результат - хеш.

Св-ва хеширования:
- одинаковые данные - одинаковый хеш
- разные данные - почти всегда разный хеш
- даже небольшое изменение в ключе сильно меняет хеш
- криптобезопасность
- простота вычисления (чтобы считать хеш-функцию было проще, чем пробежаться по всему списку) 

Алгоритм Рабина-Карпа - алгоритм поиска строки, который ищет в тексте шаблон (некую подстроку), используя хеширование. 
Для текста длины n и шаблона длины m его среднее и лучшее время исполнения равно O(n), если мы сразу нашли нужный элемент, 
но в худшем случае он имеет эффективность O(nm), если все хеши совпали с шаблонным.

Суть заключается в том, что мы считаем хеш от шаблонной строки и считаем хеш от всех подстрок нужной длины. 
Как этот хеш быстро вычислять? Хеш-функция полиномиальная (например для строки 123 с базисом 5 и модулем 33 
хеш(123) = (1*5^2+2*5+3) mod 33 = 5.
строка 1234, ищем хеши подстрок длины 3 с теми же базисом и модулем
хеш(234) = 5*хеш(123)-1*5^3+4 mod 33 = 3
