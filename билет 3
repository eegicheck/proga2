Словари и множества в python.


Множество (set) - встроенная структура данных языка Python, имеющая следующие свойства:
1. множества - это коллекция(содержит элементы);
2. множество неупорядочено (Множество не записывает (не хранит) позиции или порядок добавления его элементов. 
Таким образом, множество не имеет свойств последовательности (например, массива): 
у элементов множества нет индексов, невозможно взять срез множества;
3. элементы множества уникальны;
4. элементы множества - хешируемые объекты.
В Python множество set реализовано с использованием хеш-таблицы. 
Это приводит к тому, что элементы множества должны быть неизменяемыми объектами. 

A = set() - пустой массив
A = {} - пустой массив
A = {1,2}

Используемые функции:

1. len(s) - число элементов в множестве (размер множества).
2. x in s - принадлежит ли x множеству s.
3. set == other - равенство в смысле множеств
4. A.add(2) - добавить элемент 2 в множество А
5. B.remove(1) - удалить элемент 1 из множества В
6. A.issubset(B) - А является подмножеством В
7. A.union(B) - объединение
8. A.intersection(B) - пересечение
9. A.difference(B) - разность множеств

В Python существует неизменяемая версия множества - frozenset. 
Этот тип объектов поддерживает все операции обычного множества set, за исключением тех, которые его меняют.

Словарь - ассоциативный массив, структура данных, содержащая пары вида ключ-значение. Ключи в словаре уникальны. 
В Python есть встроенный ассоциативный массив - dict. Его реализация основана на хеш-таблицах. Поэтому
- ключом может быть только хешируемый объект;
- значением может быть любой объект. 

D = dict() - пустой словарь
D = {} - пустой словарь 

Добавить элемент в словарь можно с помощью квадратных скобок:

domains = {}
domains['ru'] = 'Russia'
domains['com'] = 'commercial'
domains['org'] = 'organizations'
print(domains)
{'ru': 'Russia', 'com': 'commercial', 'org': 'organizations'}
Из этого примера видно, что литералом словаря являются квадратные скобки, в которых через запятую перечислены пары 
в формате ключ:значение. 
Например, словарь domains можно было создать так 
domains = {'ru': 'Russia', 'com': 'commercial', 'org': 'organizations'}.

Доступ к элементу осуществляется по ключу:

print(domains['com'])
'commercial'

Удалить элемент можно с помощью оператора del. Если ключа в словаре нет, произойдет ошибка KeyError

del domains['ru']
print(domains)
{'com': 'commercial', 'org': 'organizations'}

